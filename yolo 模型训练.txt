1. 创建Python虚拟环境
    D:\Software\Python\Python3.11.4\python.exe -m venv venv

2. 激活虚拟环境
    .\venv\Scripts\Activate.ps1

3. 安装yolo库
    python -m pip install ultralytics -i https://pypi.tuna.tsinghua.edu.cn/simple/

4. 配置yolo模型
    将ultralytics\ultralytics\cfg\models\11\yolo11.yaml 复制到项目下
    并修改内容，将 nc: 80 # number of classes， 改为自己模型的类别数

    如将 nc: 80 # number of classes
    改为 nc: 5 # number of classes
    
   5个类别分别位 {刀、 匕首， 枪， 液体容器， 灭火器}

5. 配置数据集
    使用标注程序标注数据
    使用dataset.py, 将原本数据集按照8：1：1的比例划分位训练集，验证集，测试集
    在目录下创建data.yaml, 并输入以下内容
        path: datasets  # 数据集所在路径
        train: train.txt  # 数据集路径下的train.txt
        val: val.txt  # 数据集路径下的val.txt
        test: test.txt  # 数据集路径下的test.txt

    # 类别
    names:
        0: Knife
        1: Dagger
        1: Gun
        2: LiquidContainer
        3: FireExtinguisher

6. 模型训练

7. 导出为TorchScript
    yolo export model=best.pt format=torchscript 

8. 执行
    pnnx best.torchscript

9. 修改best_pnnx_.py
//      before:
//          v_165 = v_142.view(1, 144, 6400)
//          v_166 = v_153.view(1, 144, 1600)
//          v_167 = v_164.view(1, 144, 400)
//          v_168 = torch.cat((v_165, v_166, v_167), dim=2)
//          ...
//      after:
//          v_165 = v_142.view(1, 144, -1).transpose(1, 2)
//          v_166 = v_153.view(1, 144, -1).transpose(1, 2)
//          v_167 = v_164.view(1, 144, -1).transpose(1, 2)
//          v_168 = torch.cat((v_165, v_166, v_167), dim=1)
//          return v_168

10 执行, 重新导出 TorchScript
    python -c 'import best_pnnx; best_pnnx.export_torchscript()'

11 执行
    pnnx best_pnnx.py.pt inputshape=[1,3,640,640] inputshape2=[1,3,320,320]

12. 复制  
    mv yolov8n_pnnx.py.ncnn.param yolov8n.ncnn.param
    mv yolov8n_pnnx.py.ncnn.bin yolov8n.ncnn.bin
